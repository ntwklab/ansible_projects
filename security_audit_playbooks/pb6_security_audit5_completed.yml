---

#### SNMP ####
- name: SNMP PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli


  vars:
    snmp_string: snmp-server community COM_STRING RO


  tasks:
    - name: Show SNMP
      ios_command:
        commands:
          - "show snmp"
      register: pre_snmp_output

    # Do not run if SNMP is not Configured
    - name: Show Running SNMP
      when: pre_snmp_output is not search("%SNMP agent not enabled")
      ios_command:
        commands:
          - "show run | i snmp"
      register: misconfigured_SNMP

    - name: Configure SNMP
      ios_config:
        lines: 
          - "{{ snmp_string }}"
      when: pre_snmp_output is search("%SNMP agent not enabled")
      register: snmp_changed


    # Will remove SNMP config as a list, except if it is the defined SNMP string
    - name: Remove Misconfigured SNMP
      when: 
        - misconfigured_SNMP.stdout_lines is defined
        - item !=  "{{ snmp_string }}"
        - item != "{{ snmp_location }}"
      ios_config:
        lines: 
          - "no {{ item }}"
      with_items:
        - "{{ misconfigured_SNMP.stdout_lines[0] }}"
      register: snmp_misconfigure_fix


    - name: SNMP Location
      ios_config:
        lines:
          - "{{ snmp_location }}"
      register: post_snmp_output


    - name: Show Fixed SNMP Config
      ios_command:
        commands:
          - "show run | i snmp"
      when: snmp_misconfigure_fix.changed
      register: post_snmp_output

    - name: New SNMP
      debug:
        var: post_snmp_output.stdout_lines[0][0]
      when: post_snmp_output.stdout_lines is defined



#### Logging ####
- name: LOGGING HOST PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli


  vars:
    logging_host: logging host 130.130.130.101

  #### Logging ####
  tasks:
    - name: Show Run Logging
      ios_command:
        commands:
          - "sh run | i logging"
      register: pre_logging_output


    - name: Current Logging
      debug:
        var: pre_logging_output.stdout_lines[0]
      when: pre_logging_output.stdout_lines is defined



    # Will remove SNMP config as a list, except if it is the defined SNMP string
    - name: Remove Logging
      ios_config:
        lines: 
          - "no {{ item }}"
      with_items:
        - "{{ pre_logging_output.stdout_lines[0] }}"
      when: 
        - pre_logging_output.stdout_lines is defined
        - '"130.130.130.101" not in item'
        - '"synchronous" not in item'
        - '"console" not in item'
        - '"buffered" not in item'
      register: logging_misconfigure_fix


      # Always run this, will not change config if already applied
      # Some devices can be "logging [IP]" and not "logging host [IP]" as Ansible excpects
    - name: Configure Logging
      ios_config:
        lines: 
          - "{{ logging_host }}"
      register: logging_changed


    - name: Show Fixed Logging Config
      ios_command:
        commands:
          - "show run | i logging"
      when: (logging_misconfigure_fix.changed or logging_changed.changed)
      register: post_logging_output

    - name: New Logging
      debug:
        var: post_logging_output.stdout_lines[0]
      when: post_logging_output.stdout_lines is defined




#### VTY Lines ####
- name: VTY PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli


  vars:
    vty_config:
      - privilege level 15
      - password Stefan2020
      - transport input ssh
      - access-class 99 in


    vty_config_ignore:
      - "!"
      - end
      - line vty 0 4
      - line vty 5 15
      - line vty 0 15
      - ntp server 1.1.1.1
      - ntp server 2.2.2.2


  tasks:
    - name: show VTY
      ios_command:
        commands:
          - "show run | b line vty"
      register: pre_vty_output


    # Configure Correct VTY Config
    # Only configure VTY if the vty_config is not in the pre_vty_output
    - name: Configure VTY
      ios_config:
        lines: 
          - "{{ item }}"
        parents: line vty 0 4
      loop: "{{ vty_config }}"
      when: 'item not in "{{ pre_vty_output.stdout_lines[0]|list }}"'
      register: vty_changed


    # If show output line is in confg or in config_ignore, skip
    # If show output line is not in config or not in config_ignore, remove
    # Remove unwated VTY Config
    - name: Remove Unwanted VTY Config VTY
      ios_config:
        lines:
          - "no {{ item | trim }}"
        parents: line vty 0 4
      loop: "{{ pre_vty_output.stdout_lines[0] }}"
      when: 
        - item | trim not in {{ vty_config }}
        - item | trim not in {{ vty_config_ignore }}
      register: vty_fixed


    - name: Show Fixed VTY Config
      ios_command:
        commands:
          - "show run | b line vty"
      when: 
        - vty_changed.changed or vty_fixed.changed
      register: post_vty_output

    - name: New VTY
      debug:
        var: post_vty_output.stdout_lines[0]
      when: post_vty_output.stdout_lines is defined




#### Secret Lines ####
- name: SECRET PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli

  vars:
    enable_secret: enable secret 5 $1$1kIy$42yUvkQHylbvbNnDv.rjZ/


  tasks:
    - name: Show Secret
      ios_command:
        commands:
          - "show run | i enable secret"
      register: pre_secret_output

    - name: Show Enable
      ios_command:
        commands:
          - "show run | i enable password"
      register: pre_enable_output

    - debug:
        var: "pre_enable_output.stdout_lines[0][0].split()[:-1] | join(' ')"


    - name: Remove Enable Password
      loop: "{{ pre_enable_output.stdout_lines[0] }}"
      when: 
        - '"enable password" in pre_enable_output.stdout_lines | trim'
        # - item is not search("{{ vty_config|list }}")
        # - item == "privilege level 15"
      ios_config:
        lines: 
          - no {{ item.split()[:-1] | join(' ') }}
      register: enable_misconfigure_fix


  # NEED TO DO THE SAME WITH SECRET PASSWORD, -2 FOR THAT TO REMOVE HASH AND 5
    - debug:
        var: "pre_secret_output.stdout_lines[0][0].split()[:-2] | join(' ')"


    - name: Configure secret Password
      ios_config:
        lines: 
          - "{{ enable_secret }}"
      register: config_secret



#### Domain Name ####
- name: DOMAIN PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli

  vars:
    domain: ip domain name scrap.lab


  tasks:
    - name: Configure Domain
      ios_config:
        lines: 
          - "{{ domain }}"
      register: config_domain




#### NTP ####
- name: NTP PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli

  vars:
    ntp_config:
      - ntp server 1.1.1.1
      - ntp server 2.2.2.2


  tasks:
    - name: Show NTP
      ios_command:
        commands:
          - "show run | i ntp"
      register: pre_ntp_output


    - debug:
        var: "pre_ntp_output.stdout_lines[0][0].split()[:-1] | join(' ')"


    - name: Remove Unwanted NTP Config
      ios_config:
        lines:
          - "no {{ item | trim }}"
      loop: "{{ pre_ntp_output.stdout_lines[0] }}"
      when: 
        - item | trim not in {{ ntp_config }}
        - item != "" # When equal to empty string, skip
      register: ntp_fixed


    - name: configure NTP
      ios_config:
        lines: 
          - "{{ item }}"
      with_items:
        - "{{ ntp_config }}"
      register: ntp_changed




#### DNS ####
- name: DNS PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli

  vars:
    dns_config:
      - ip name-server 3.3.3.3
      - ip name-server 4.4.4.4


  tasks:
    - name: Show DNS
      ios_command:
        commands:
          - "show run | i name-server"
      register: pre_dns_output


    - name: Remove Unwanted DNS Config
      ios_config:
        lines:
          - "no {{ item | trim }}"
      loop: "{{ pre_dns_output.stdout_lines[0] }}"
      when: 
        - item | trim not in {{ dns_config }}
        - item != "" # When equal to empty string, skip
      register: dns_fixed


    - name: Configure DNS
      ios_config:
        lines: 
          - "{{ item }}"
      with_items:
        - "{{ dns_config }}"
      register: ntp_changed




#### VTY ACL ####
# https://www.ansible.com/blog/deep-dive-acl-configuration-management-using-ansible-network-automation-resource-modules
- name: VTY ACL - REPLACED STATE PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli


  tasks:
    - name: Replace ACLs config with device existing ACLs config
      ios_acls:
        state: replaced
        config: "{{ acls }}"




#### VTY ACL Lines ####
- name: VTY ACL PLAY
  hosts: all_devices
  gather_facts: false
  connection: network_cli


  tasks:
    # Configure Correct VTY Config
    # Only configure VTY if the vty_config is not in the pre_vty_output
    - name: Configure VTY
      ios_config:
        lines: 
          - access-class 99 in 
        parents: line vty 0 4

